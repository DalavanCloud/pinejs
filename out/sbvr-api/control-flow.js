// Generated by CoffeeScript 1.12.6
(function() {
  var Promise, _, liftP, mapTill, settleMap, settleMapSeries, wrap;

  _ = require('lodash');

  Promise = require('bluebird');

  exports.liftP = liftP = function(fn) {
    return function(a) {
      if (_.isArray(a)) {
        return Promise.mapSeries(a, fn);
      } else {
        return Promise.resolve(a).then(fn);
      }
    };
  };

  settleMap = function(a, fn) {
    var runF;
    runF = Promise.method(fn);
    return Promise.map(a, _.flow(runF, wrap));
  };

  settleMapSeries = function(a, fn) {
    var runF;
    runF = Promise.method(fn);
    return Promise.mapSeries(a, _.flow(runF, wrap));
  };

  wrap = function(p) {
    return p.then(_.identity, _.identity);
  };

  mapTill = function(a, fn) {
    var results, runF;
    runF = Promise.method(fn);
    results = [];
    return Promise.each(a, function(p) {
      return runF(p).then(function(result) {
        return results.push(result);
      }).tapCatch(function(err) {
        return results.push(err);
      });
    })["return"](results).catchReturn(results);
  };

  exports.getMappingFn = function(headers) {
    if ((headers != null ? headers.prefer : void 0) === 'odata.continue-on-error') {
      return {
        mapPar: settleMap,
        mapSeries: settleMapSeries
      };
    } else {
      return {
        mapPar: mapTill,
        mapSeries: mapTill
      };
    }
  };

}).call(this);

//# sourceMappingURL=control-flow.js.map
