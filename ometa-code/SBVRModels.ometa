/*
Copyright 2011 University of Surrey

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/

model1 =
'T: pilot
T: plane
F: pilot can fly plane
F: pilot is experienced
R: It is obligatory that each pilot can fly at least 1 plane
R: It is obligatory that each pilot that is experienced can fly at least 3 planes'

model2 =
'T: student
F: student is school president
R: It is obligatory that a student is school president
T: module
F: student is registered for module
R: It is obligatory that each student is registered for at most 5 modules
T: study programme
F: student is enrolled in study programme
F: module is available for study programme
R: It is obligatory that each student that is registered for a module is enrolled in a study programme that the module is available for
T: lecturer
F: student is under probation
R: It is obligatory that each student is registered for at most 5 modules
R: It is obligatory that each student that is under probation is registered for at most 3 modules
R: It is obligatory that at most 10 students are under probation
F: lecturer grades student for study programme with grade
R: It is prohibited that a student that is under probation is enrolled in more than 2 study programmes
R: It is obligatory that each student is registered for each module'

model3 =
'T: student
T: module
T: study programme
F: student is registered for module
F: student is enrolled in study programme
F: module is available for study programme
R: It is obligatory that each student is registered for at most 5 modules
R: It is obligatory that each student that is registered for a module is enrolled in a study programme that the module is available for
F: student is under probation
R: It is obligatory that each student that is under probation is registered for at most 3 modules'

// WIP:
modelTest =
'T: person
T: student
	Definition: A definition
	Source: A source
	Dictionary Basis: A dictionary basis
	General Concept: A general concept
	Concept Type: person
	Necessity: A necessity
	Possibility: A possibility
	Reference Scheme: A reference scheme
	Note: A note
	Example: An example
	Synonym: A synonym
	Synonymous Form: A synonymous form
	See: Something to see
	Subject Field: A subject field
	Namespace URI: A namespace URI
	Database Table Name: student_table
	Database ID Field: id_field
	Database Name Field: name_field
T: lecturer
	Concept Type: person
T: module ' +

/* Fact Types */'
F: student is school president '					+ /* term verb */ '
F: student is registered for module'				+ /* term verb term */ '
F: student is registered for module to catchup'		+ /* term verb term verb */ '
F: student is registered for module with lecturer'	+ /* term verb term verb term */ '
F: person is swimming'								+ /* for inflection */

/* Mod rules */'
R: It is obligatory that	a student is school president'			+ /* It is obligatory */ '
R: It is necessary that		a student is school president'			+ /* It is necessary */ '
R: It is possible that		a student is school president'			+ /* It is possible */ '
R: It is permissible that	a student is school president'			+ /* It is permissible */ '

R: It is prohibited that	some students are school president'	+ /* It is prohibited */ '
R: It is impossible that	some students are school president'	+ /* It is impossible */ '
R: It is not possible that	some students are school president'	+ /* It is not possible */

/* Quantifiers */'
R: It is obligatory that each	student		is registered for at least one module'	+ /* each */ '
R: It is obligatory that a 		student		is registered for at least one module'	+ /* a */ '
R: It is obligatory that an		student		is registered for at least one module'	+ /* an */ '
R: It is obligatory that some	students	are registered for at least one module'	+ /* some */

/* Quantifiers with cardinality */'
R: It is obligatory that at most 50		students are registered for at least one module'+ /* at most */ '
R: It is obligatory that at least one	student is registered for at least one module'	+ /* at least */ '
R: It is obligatory that more than 0	students are registered for at least one module'	+ /* more than */ '
R: It is obligatory that exactly one	student is school president'					+ /* exactly */

/* Quantifiers with dual cardinality */'
R: It is obligatory that at least one and at most 50	students are registered for at least one module'	+ /* at least */

/* Inflection */'
R: It is obligatory that exactly 0 people are swimming'

modelT =
'T: resource
T: transaction
T: lock
T: conditional representation
F: lock is exclusive
F: lock is shared
F: resource is under lock
F: lock belongs to transaction
R: It is obligatory that each resource is under at most 1 lock that is exclusive'
